#macro (iconSpan $type $text $additionalClasses)
    <span class="icon#if($type != "") icon-$type#end $!additionalClasses">$!text</span>    
#end

#macro (contentIcon $content)
    #contentIconWithLinkPrefix($content $staticResourceUrlPrefix)
#end

#macro (contentIconWithLinkPrefix $content $prefix)
    #if ($content.type == "page")
    #if ($content.homePage)<span class="icon icon-home-page" title="$action.getText("home.page")">$action.getText("home.page"):</span>
    #elseif ($remoteUser && $pageManager.isPageRecentlyUpdatedForUser($content, $remoteUser))<span class="icon icon-recently-updated-page" title="$action.getText("recently.updated.page.nontitle")">$action.getText("recently.updated.page.nontitle"):</span>
    #else<span class="icon icon-page" title="$action.getText("page.word")">$action.getText("page.word"):</span>
    #end
    #elseif ($content.type == "comment") <span class="icon icon-comment" title="$action.getText("comment.name")">$action.getText("comment.name"):</span>
    #elseif ($content.type == "spacedesc")<span class="icon icon-space" title="$action.getText("space.name")">$action.getText("space.name"):</span>
    #elseif ($content.type == "personalspacedesc")<span class="icon icon-personal-space" title="$action.getText("personal.space")">$action.getText("personal.space"):</span>
    #elseif ($content.type == "userinfo")<span class="icon icon-user" title="$action.getText("user.profile")">$action.getText("user.profile"):</span>
    #elseif ($content.type == "blogpost")<span class="icon icon-blog" title="$action.getText("blog.post")">$action.getText("blog.post"):</span>
    #elseif ($content.type == "trackback")<span class="icon icon-trackback" title="$action.getText("track.back")">$action.getText("track.back"):</span>
    #elseif ($content.type == "mail")<span class="icon icon-mail" title="$action.getText("mail.name")">$action.getText("mail.name"):</span>
    #elseif ($content.type == "attachment")#set ($attachment = $content)#parse ("/pages/includes/attachment_icon.vm")
    #elseif ($content.type == "status")<span class="icon icon-status" title="$action.getText("status.name")">$action.getText("status.name"):</span>#end
#end

#macro (contentIcon2 $content $linkColor $linkHref $linkTitle)
    #if ($content.type == "page")
    #if ($content.homePage)<a $linkColor href="$linkHref" class="icon icon-home-page" title="$action.getText("home.page")">$action.getText("home.page"):</a>
    #elseif ($remoteUser && $pageManager.isPageRecentlyUpdatedForUser($content, $remoteUser))<a $linkColor href="$linkHref" class="icon icon-recently-updated-page" title="$action.getText("recently.updated.page.nontitle")">$action.getText("recently.updated.page.nontitle"):</a>
    #else<a $linkColor href="$linkHref" class="icon icon-page" title="$action.getText("page.word")">$action.getText("page.word"):</a>
    #end
    #elseif ($content.type == "comment") <a $linkColor href="$linkHref" class="icon icon-comment" title="$action.getText("comment.name")">$action.getText("comment.name"):</a>
    #elseif ($content.type == "spacedesc")<a $linkColor href="$linkHref" class="icon icon-space" title="$action.getText("space.name")">$action.getText("space.name"):</a>
    #elseif ($content.type == "personalspacedesc")<a $linkColor href="$linkHref" class="icon icon-personal-space" title="$action.getText("personal.space")">$action.getText("personal.space"):</a>
    #elseif ($content.type == "userinfo")<a $linkColor href="$linkHref" class="icon icon-user" title="$action.getText("user.profile")">$action.getText("user.profile"):</a>
    #elseif ($content.type == "blogpost")<a $linkColor href="$linkHref" class="icon icon-blog" title="$action.getText("blog.post")">$action.getText("blog.post"):</a>
    #elseif ($content.type == "trackback")<a $linkColor href="$linkHref" class="icon icon-trackback" title="$action.getText("track.back")">$action.getText("track.back"):</a>
    #elseif ($content.type == "mail")<a $linkColor href="$linkHref" class="icon icon-mail" title="$action.getText("mail.name")">$action.getText("mail.name"):</a>
    #elseif ($content.type == "attachment")#set ($attachment = $content)#parse ("/pages/includes/attachment_icon.vm")
    #elseif ($content.type == "status")<a $linkColor href="$linkHref" class="icon icon-status" title="$action.getText("status.name")">$action.getText("status.name"):</a>#end
#end

#macro (typeIcon $type)
    #if ($type == "page")
        <img src="$staticResourceUrlPrefix/images/icons/contenttypes/page_16.png" class="legacyicon" />
    #elseif ($type == "comment")
        <img src="$staticResourceUrlPrefix/images/icons/contenttypes/comment_16.png" class="legacyicon" />
    #elseif ($type == "spacedesc")
        <img src="$staticResourceUrlPrefix/images/icons/contenttypes/space_16.png" class="legacyicon" />
    #elseif ($type == "personalspacedesc")
        <img src="$staticResourceUrlPrefix/images/icons/contenttypes/personal_space_16.png" class="legacyicon" />
    #elseif ($type == "userinfo")
        <img src="$staticResourceUrlPrefix/images/icons/profilepics/default_16.png" class="legacyicon" />
    #elseif ($type == "blogpost")
        <img src="$staticResourceUrlPrefix/images/icons/contenttypes/blog_post_16.png" class="legacyicon" />
    #elseif ($type == "attachment")
        <img src="$staticResourceUrlPrefix/images/icons/attachments/generic_16.png" class="legacyicon" />
    #elseif ($type == "mail")
        <img src="$staticResourceUrlPrefix/images/icons/contenttypes/mail_16.png" class="legacyicon" />
	#elseif ($type == "all")
		<img src="$staticResourceUrlPrefix/images/icons/list_pages_16.gif" class="legacyicon" />
	#end
#end

## deprecated since 4.0 - icons should conform to the icon sprite pattern and use #iconSpan instead
#macro (icon $imageName $size $title)<img src="$staticResourceUrlPrefix/images/icons/${imageName}" height="$size" width="$size" style="vertical-align: middle" #if($title != '')title="$title"#end/>#end

#macro (contentHref $content)
    #contentHrefWithLinkPrefix($content $req.contextPath)
#end

#macro (contentHrefWithLinkPrefix $content $prefix)
    #if ($content.type == "attachment")
        <a href="$prefix$content.content.urlPath">$webwork.htmlEncode($content.content.displayTitle)</a> &gt;
        <a href="$prefix$content.downloadPath">$webwork.htmlEncode($content.displayTitle)</a>
    #elseif ($content.type == "comment")
        <a href="$prefix$content.owner.urlPath">$webwork.htmlEncode($content.owner.displayTitle)</a> &gt;
        <a href="$prefix$content.urlPath">$webwork.htmlEncode($content.displayTitle)</a>
    #else
        <a href="$prefix$content.urlPath">$webwork.htmlEncode($content.displayTitle)</a>
    #end
#end

#macro (contentOther $content)
    #if ($content.type == "page" || $content.type == "blogpost")
        #if ($content.originalVersion)
            <span class="smalltext">v. $content.version ($webwork.htmlEncode($content.originalVersion.space.name))</span>
        #else
            <span class="smalltext">($webwork.htmlEncode($content.space.name))</span>
        #end
    #elseif ($content.type == "comment")
        <span class="smalltext">($webwork.htmlEncode($content.owner.space.name))</span>
    #elseif ($content.type == "userinfo")
        <span class="smalltext">($content.username)</span>
    #elseif ($content.type == "status")
        <span class="smalltext">(#userNonLink($content.creatorName))</span>
    ## If the attachment is attached to a profile, the container text is different (CONF-4465)
    #elseif ($content.type == "attachment" && $content.content.type == "userinfo")
        <span class="smalltext">($content.content.username)</span>
    #elseif ($content.type == "attachment")
        <span class="smalltext">($webwork.htmlEncode($content.content.space.name))</span>
    #end
#end

#macro (contentLink2 $content $showIcon $showSpace)
    #contentLink2WithLinkPrefix($content $showIcon $showSpace $req.contextPath)
#end

#macro (contentLink2WithLinkPrefix $content $showIcon $showSpace $baseUrl)
    #if ($showIcon) #contentIconWithLinkPrefix($content $staticResourceUrlPrefix) #end
    #contentHrefWithLinkPrefix($content $baseUrl)
    #if ($showSpace) #contentOther($content) #end
#end

#macro (contentLink $content)
    #contentLink2($content true true)
#end

#macro (contentLinkWithLinkPrefix $content $prefix)
    #contentLink2WithLinkPrefix($content true false $prefix)
#end

#macro (contentLinkWithAnchor $content $anchor)
    #contentIcon($content)
    <a #if ($textUtil.stringSet($anchor)) name="$anchor" #end href="$req.contextPath$content.urlPath">$webwork.htmlEncode($content.displayTitle)</a>
#end

#macro (includePage $spaceKey $pageTitle)
    #if ($renderBean.pageExists($spaceKey, $pageTitle))
        #if ($permissionHelper.canViewPage($action.remoteUser, $spaceKey, $pageTitle))
            $renderBean.render($spaceKey, $pageTitle)
        #else
            <span class="error"><span class="errorMessage">$action.getText('insufficient.privelages.to.view.page')</span></span>
        #end
    #else
        <span class="error"><span class="errorMessage">$action.getText('page.not.found.error')</span></span>
    #end
#end

#macro (includePageWithId $pageId)
    #if ($renderBean.pageExists($pageId))
        #if ($permissionHelper.canViewPage($action.remoteUser, $pageId))
            $renderBean.render($pageId)
        #else
            <span class="error"><span class="errorMessage">$action.getText('insufficient.privelages.to.view.page')</span></span>
        #end
    #else
        <span class="error"><span class="errorMessage">$action.getText('page.not.found.error')</span></span>
    #end
#end

#*
Link to a user's profile page, given their username. If the username doesn't exist, "Anonymous" is printed
*#
#macro (usernameLink $username)
#trim()
    #if ("$!username" != "")
        #if ($action.getUserFullName($username))
        <a href="$!req.contextPath/display/~$generalUtil.doubleUrlEncode($username)"
           #if($permissionHelper.canView($action.remoteUser, $action.getUser($username)))
               class="url fn confluence-userlink" data-username="$generalUtil.urlEncode($username)"
           #else
               class="url fn"
           #end
        >$generalUtil.htmlEncode($action.getUserFullName($username))</a>
        #else
            <a href="$!req.contextPath/display/~$generalUtil.doubleUrlEncode($username)">$username</a>
        #end
    #else
        $action.getText('anonymous.name')
    #end
#end
#end

#macro (usernameLinkWithCustomBaseUrl $username $baseurl)
    #if ("$!username" != "")
        #if ($action.getUserFullName($username))<a href="$baseurl/display/~$generalUtil.doubleUrlEncode($username)">$generalUtil.htmlEncode($action.getUserFullName($username))</a>#else<a href="$baseurl/display/~$generalUtil.doubleUrlEncode($username)">$username</a>#end
    #else
        $action.getText('anonymous.name')
    #end
#end

#macro (usernameLinkParentWindow $username)
    #if ($username)
        <a href="javascript:window.opener.location='$!req.contextPath/display/~$generalUtil.doubleUrlEncode($username)'; window.close();">$generalUtil.htmlEncode($action.getUserFullName($username))</a>
    #else
        $action.getText('anonymous.name')
    #end
#end

#macro (emailUserLink $user $baseurl)
    #if ($user)
        <a href="$baseurl/display/~$generalUtil.doubleUrlEncode($user.name)"#if($textLinkColour) style="color:$textLinkColour;text-decoration:none;"#end>$generalUtil.htmlEncode($user.fullName)</a>
    #else
        $action.getText('anonymous.name')
    #end
#end

#macro (userNonLink $username)
#trim()
    #fullNameOrAnonymous ($action.getUser($username))
#end
#end

#macro (fullNameOrAnonymous $user)#if ($user && $user.fullName)$user.fullName#else$action.getText('anonymous.name')#end#end

#macro (siteTitle)$settingsManager.globalSettings.siteTitle#end

#macro (paginationBase $paginationSupport $actionContext $showTotal)
    #requireResource("confluence.web.resources:pagination-styles")

    #set ($numberToShow = 7)

    #set ($previousIndexes = $paginationSupport.previousStartIndexes)
    #set ($nextIndexes = $paginationSupport.nextStartIndexes)

    <div class="pagination">
        #if( $paginationSupport.total > 0 )
            #set ($startIndex = $paginationSupport.startIndex + 1)
            #if ($showTotal)
                #set ($endPageNumber = $paginationSupport.total / $paginationSupport.pageSize)
                #if( $paginationSupport.total % $paginationSupport.pageSize != 0)
                #set ($endPageNumber = $endPageNumber + 1)
                #end



                #set ($endIndex  = $endPageNumber  * $paginationSupport.pageSize)
                #set ($endIndex  = $endIndex  - $paginationSupport.pageSize)

            #end
        #end
        <ul class="pagination">
        #if( $previousIndexes || $nextIndexes )

            #if($previousIndexes)
                #set ($startPageNumber = $generalUtil.arraySize($previousIndexes) - $numberToShow + 1)
                <li><a class="pagination-prev" href="${actionContext}startIndex=$paginationSupport.previousStartIndex">$action.getText('previous.name')</a></li>
            #end

            #set ($currentIndex = 1)

            #if ($previousIndexes && $startPageNumber > 0)
                <li><a href="${actionContext}startIndex=0">$currentIndex</a></li>

                #if ($startPageNumber > 1)
                        <li class="pagination-hellip">&hellip;</li>
                #end
            #end

            #if( $previousIndexes )
                #foreach( $index in $previousIndexes )
                    #if ($velocityCount > $startPageNumber)
                        <li><a href="${actionContext}startIndex=$index">$currentIndex</a></li>
                    #end
                    #set ($currentIndex = $currentIndex + 1)
                #end
            #end

            <li><strong class="pagination-curr">$currentIndex</strong></li>

            #if( $nextIndexes )
                #set ($lastNumberShown = $currentIndex)
                #foreach( $index in $nextIndexes )
                    #set ($currentIndex = $currentIndex + 1)
                    #if ($velocityCount < $numberToShow)
                        <li><a href="${actionContext}startIndex=$index">$currentIndex</a></li>
                        #set ($lastNumberShown = $lastNumberShown + 1)
					#elseif (!$showTotal && $velocityCount == $numberToShow)
                        <li class="pagination-hellip">&hellip;</li>
                    #end
                #end

                #if ($showTotal && $lastNumberShown < $endPageNumber)
                    #if ($lastNumberShown < $endPageNumber - 1)
                        <li class="pagination-hellip">&hellip;</li>
                    #end
                    <li><a href="${actionContext}startIndex=$endIndex">$endPageNumber</a></li>
                #end

                <li><a class="pagination-next" href="${actionContext}startIndex=$paginationSupport.nextStartIndex">$action.getText('next.name')</a></li>
            #end
        #end
        </ul>
    </div>
#end

#*
Prints the search result pagination info.
*#

#macro(pagination $paginationSupport $actionContext)
    #paginationBase($paginationSupport $actionContext true)
#end

#*
Prints the search result pagination info. for a pager object (i.e. with total size unknown).
*#

#macro(entityPagination $paginationSupport $actionContext)
    #paginationBase($paginationSupport $actionContext false)
#end


#*
    Prints the breadcrumbs
*#
#macro(breadcrumbs)
    $!sitemeshPage.getProperty("page.breadcrumbs")
#end

#macro (colourRow $name $colour $isDefault)
    <tr>
        <td nowrap width="40%" align="right"><strong>$action.getText($name)</strong></td>
        <td width="30"><div style="background-color: $colour; width: 30; border: 1px solid black">&nbsp;</div></td>
        <td><span class="monospaceInput">#if($isDefault)&lt;$action.getText('default')&gt;#else$colour#end</span></td>
    </tr>
#end

#macro (trackbackRdf $identifier $title $ping)
<!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:dc="http://purl.org/dc/elements/1.1/"
         xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
         #set($escapedId = $generalUtil.rdfEncode($identifier) )
         #set($escapedTitle = $generalUtil.rdfEncode($title) )
<rdf:Description
    rdf:about="$escapedId"
    dc:identifier="$escapedId"
    dc:title="$escapedTitle"
    trackback:ping="$ping"/>
</rdf:RDF>
-->
#end

#macro (onoff $test)
    #if ($test) <span class="on-label">$action.getText('on.name')</span> #else <span class="off-label">$action.getText('off.name')</span> #end
#end

#macro (yesno $test)
    #if ($test) <span class="yes-label">$action.getText('yes.name.caps')</span> #else <span class="no-label">$action.getText('no.name.caps')</span> #end
#end

## Expects a javascript function as a variable which can be excecuted in this script.
#macro (fielderrorExecuteFunction $fieldname $javascriptFunction)
    #set ($fieldErrors = $action.fieldErrors)
    #if ($fieldErrors)
      #if ($fieldErrors.get($fieldname))
          #foreach ($error in $fieldErrors.get($fieldname))
          <div class="error"><span class="errorMessage">
              <script>
                  $javascriptFunction
              </script>
            #set( $message = $action.getText(${error}) )
            #if( $message && $message != "" )
              $message
            #else
              $error
            #end
          </span></div>
          #end
      #end
    #end
#end

#macro (fielderror $fieldname)
    #set ($fieldErrors = $action.fieldErrors)
    #if ($fieldErrors)
      #if ($fieldErrors.get($fieldname))
          #foreach ($error in $fieldErrors.get($fieldname))
          <div id="${fieldname}-error" class="error"><span class="errorMessage">
            #set( $message = $action.getText(${error}) )
            #if( $message && $message != "" )
              $message
            #else
              $error
            #end
          </span></div>
          #end
      #end
    #end
#end

#macro (fielderrorRow $fieldname)
    #set ($fieldErrors = $stack.findValue("fieldErrors"))
    #if ($fieldErrors)
        #if ($fieldErrors.get($fieldname))
            #foreach ($error in $fieldErrors.get($fieldname))
                <tr>
                <td colspan="2" class="error"><span class="errorMessage">
                #set( $message = $i18n.getText($error) )
                #if( $message && $message != "" )
                  $message
                #else
                  $error
                #end
                </span></td>
                </tr>
            #end
        #end
    #end
#end



#*
    Sets up variables which are used to determine whether or not the help panel
    should be displayed.
*#

#macro(infoPanelInit)
    #if ($sitemeshPage.getProperty("meta.help-path"))
      #set ($helpPath = $sitemeshPage.getProperty("meta.help-path"))
    #end

    #if ($sitemeshPage.getProperty("page.help-content"))
      #set ($helpContent = $sitemeshPage.getProperty("page.help-content"))
    #end

    ## decide whether or not to include the right nav bar
    #if ($helpPath || $helpContent)
      #set ($helpAvailable = true)
    #end

    #if ($sitemeshPage.getProperty("meta.infopanel-width"))
      #set ($panelWidth = $sitemeshPage.getProperty("meta.infopanel-width"))
    #end

    #set ($infoPanelRequired = $helpAvailable)
#end

#*
    Sets up variables which are used to determine whether or not the help panel
    should be displayed, using the parameter object passed by the inline decorator
    directive: applyDecorator
*#

#macro(infoPanelInitFromParams)
    #if ($params.get("help-path"))
      #set ($helpPath = $params.get("help-path"))
    #end

    #if ($params.get("help-content"))
      #set ($helpContent = $params.get("help-content"))
    #end

    ## decide whether or not to include the right nav bar
    #if ($helpPath || $helpContent)
      #set ($helpAvailable = true)
    #end

    #if ($params.get("infopanel-width"))
      #set ($panelWidth = $params.get("infopanel-width"))
    #end

    #set ($infoPanelRequired = $helpAvailable)
#end

#* A header which will probably create a very ugly page but one suitable for when a user has to fix
   something urgently before Confluence will be in a good state e.g. renew license before upgrade
   tasks can run.
*#
#macro(fixonlyHeader)
    #if (!$sitemeshPage.getProperty("page.allowindex"))
        <meta name="robots" content="noindex,nofollow">
        <meta name="robots" content="noarchive">
    #end
    #if ($req.getAttribute("Confluence-Request-Time"))
        <meta name="confluence-request-time" content="$!req.getAttribute("Confluence-Request-Time")">
    #end
    #favicon()
#end

## deprecated since 2.8, parse header.vm instead
#macro(standardHeaderWithStylesheetAction $stylesheetAction)
    #parse ("/decorators/includes/header.vm")
#end

## deprecated since 2.8, parse header.vm instead
#macro(standardHeader)
    #standardHeaderWithStylesheetAction("main")
#end

## deprecated since 2.8, parse header.vm instead, setting stylesheetAction var to 'admin'
#macro(standardHeaderForAdmin)
    #standardHeaderWithStylesheetAction("admin")
#end

#macro(javascripts)
    <!-- include system javascript resources -->
    #requireResourcesForContext("afterjavascripts")
    $!webResourceManager.getJsResources()
    $!webResourceManager.getThemeJsResources($!spaceKey)
    <!-- end system javascript resources -->
#end

#macro(rssautodiscovery $rssDescriptor)
    #if($rssDescriptor)
        <content tag="rssautodiscovery">
        <link rel="alternate" type="application/rss+xml"
            title="RSS $!action.rssDescriptor.title"
            href="$req.contextPath$action.rssDescriptor.rssHref" />
        <link rel="alternate" type="application/atom+xml"
            title="ATOM $!action.rssDescriptor.title"
            href="$req.contextPath$action.rssDescriptor.atomHref" />
        </content>
        <content tag="feedurl">$action.rssDescriptor.atomHref</content>
    #end
#end

#macro(displayGlobalMessages)
    #set ($messages = $messageManager.getMessages())
    #if ($messages && $messages.size() > 0)
        <ul id="messageContainer">
        #foreach ($message in $messages)
            #if ($message.isVisible())
                <li id="confluence-message-${message.id}" class="confluence-messages $message.cssClass">
                    #if ($message.isClosable()) <img class="message-close-button" src="$staticResourceUrlPrefix/images/icons/close_16.gif" title="$action.getText('close.name')">#end
                    $message.text
                </li>
            #end
        #end
        </ul>
    #end
#end

#macro(infoPanel $incomingLinks $trackbacks $referrers $externalReferences)
<div id="info-panel" class="rightpanel">
  #if ($helpAvailable)
      #requireResource("confluence.web.resources:help-content-resources")
      <h3 id="helpheading">$action.getText('help.tips')</h3>
      <div id="helpcontent">
          #if ($helpContent)
              $sitemeshPage.getProperty("page.help-content")
          #else
              #parse ($helpPath)
          #end
      </div>
  #else
      #if ($hasPageOperations)
          #if ($sitemeshPage.getProperty("page.operations.title"))
              <div class="menuheading">$sitemeshPage.getProperty("page.operations.title")</div>
          #else
              <div class="menuheading">$action.getText('operations.word')</div>
          #end
          <div class="menuitems">
              $!sitemeshPage.getProperty("page.operations")
              $!sitemeshPage.getProperty("page.incoming-links")
              $!sitemeshPage.getProperty("page.trackbacks")
              $!sitemeshPage.getProperty("page.referrers")
              $!sitemeshPage.getProperty("page.external-references")
          </div>
      #end
  #end
</div>
#end

#macro (nameList $names)
    #set($user = "")
    #foreach ($user in $names)
        #if ($velocityCount == $names.size())
            #usernameLink ($user)
        #else
            #usernameLink($user),
        #end
        #set($user = "")
    #end
#end

#* Put this macro back in for backward compatability
 * Use the blogPostsCalendarWithArrows from now on (it puts the correct arrows links whereas this one doesn't see CONF-6779)
 *#
#macro (blogPostsCalendar $cal)
    <table id="blogcalendar" class="blogcalendar" border="0" cellspacing="0" cellpadding="2" summary="$action.getText('monthly.calander.with.links.to.news.items')">
           <tr>
               <th class="calendarhead">
                   #if ($cal.lastPostInPreviousMonth)
                   <a href="$req.contextPath/display/$cal.spaceKey/$cal.previousMonth/" rel="nofollow"><span class="backArrow"><span>&lt;&lt;</span></span></a>
                   #else &nbsp; #end
               </th>
               <th class="calendarhead" colspan="5" align="center"><a class="calendarhead" href="$req.contextPath/display/$cal.spaceKey/$cal.currentMonth/">$cal.formatMonthYear()</a></th>
               <th class="calendarhead">
                   #if ($cal.firstPostInNextMonth)
                   <a href="$req.contextPath/display/$cal.spaceKey/$cal.nextMonth" rel="nofollow"><span class="fwdArrow"><span>&gt;&gt;</span></span></a>
                   #else &nbsp; #end
               </th>
           </tr>
           <tr>
               <th abbr="Sunday" align="center">$action.getText('sunday.abbr')</th>
               <th abbr="Monday" align="center">$action.getText('monday.abbr')</th>
               <th abbr="Tuesday" align="center">$action.getText('tuesday.abbr')</th>
               <th abbr="Wednesday" align="center">$action.getText('wednesday.abbr')</th>
               <th abbr="Thursday" align="center">$action.getText('thursday.abbr')</th>
               <th abbr="Friday" align="center">$action.getText('friday.abbr')</th>
               <th abbr="Saturday" align="center">$action.getText('saturday.abbr')</th>
           </tr>

        #set ( $weeks = ($cal.getDaysInMonth() + $cal.startingDayOfMonth)/7 )
        #foreach ( $week in [0..$weeks] )
           <tr>
           #foreach ($day in [1..7] )
              <td align="center">
              #set ($date = $week * 7 + $day - $cal.startingDayOfMonth)
              #if ($date < 1 || $date > $cal.getDaysInMonth())
                  &nbsp;
              #elseif ($cal.getPostsForDay($date).size() == 0)
                  $date
              #else
                  #set ($thePost = $cal.getPostsForDay($date).get(0))
                  <a href="$req.contextPath/display/$thePost.space.key/$thePost.datePath/">$date</a>
              #end
              </td>
           #end
           </tr>
        #end
    </table>
#end

#* Put this macro back in for backward compatability
 * Passes in the action and a flag to display the correct arrow links to blogs:
 * true = link to the next/prev DATE post, with blog post date displayed
 * false = link to the next/prev post, with blog post title displayed
 * Use blogPostsByMonth instead
 *#
#macro (blogPostsCalendarWithDateLinks $action $datePostArrows)

    #set ($cal = $action.calendarForThisMonth)

    <table class="blogcalendar" border="0" cellspacing="0" cellpadding="2" summary="$action.getText('monthly.calander.with.links.to.news.items')">
           <tr>
               <th class="calendarhead">
                   #if ($cal.lastPostInPreviousMonth)
                   <a href="$req.contextPath/display/$cal.spaceKey/$cal.previousMonth/" rel="nofollow"><img src="$staticResourceUrlPrefix/images/icons/back_16.gif" height=16 width=16 border=0 align=absmiddle title="$action.getText('previous.month')"></a>
                   #else &nbsp; #end
               </th>
               <th class="calendarhead" colspan="5" align="center"><a class="calendarhead" href="$req.contextPath/display/$cal.spaceKey/$cal.currentMonth/">$cal.formatMonthYear()</a></th>
               <th class="calendarhead">
                   #if ($cal.firstPostInNextMonth)
                   <a href="$req.contextPath/display/$cal.spaceKey/$cal.nextMonth" rel="nofollow"><img src="$staticResourceUrlPrefix/images/icons/forwd_16.gif" height=16 width=16 border=0 align=absmiddle title="$action.getText('next.month')"></a>
                   #else &nbsp; #end
               </th>
           </tr>
           <tr>
               <th abbr="Sunday" align="center">$action.getText('sunday.abbr')</th>
               <th abbr="Monday" align="center">$action.getText('monday.abbr')</th>
               <th abbr="Tuesday" align="center">$action.getText('tuesday.abbr')</th>
               <th abbr="Wednesday" align="center">$action.getText('wednesday.abbr')</th>
               <th abbr="Thursday" align="center">$action.getText('thursday.abbr')</th>
               <th abbr="Friday" align="center">$action.getText('friday.abbr')</th>
               <th abbr="Saturday" align="center">$action.getText('saturday.abbr')</th>
           </tr>

        #set ( $weeks = ($cal.getDaysInMonth() + $cal.startingDayOfMonth)/7 )
        #foreach ( $week in [0..$weeks] )
           <tr>
           #foreach ($day in [1..7] )
              <td align="center">
              #set ($date = $week * 7 + $day - $cal.startingDayOfMonth)
              #if ($date < 1 || $date > $cal.getDaysInMonth())
                  &nbsp;
              #elseif ($cal.getPostsForDay($date).size() == 0)
                  $date
              #else
                  #set ($thePost = $cal.getPostsForDay($date).get(0))
                  <a href="$req.contextPath/display/$thePost.space.key/$thePost.datePath/">$date</a>
              #end
              </td>
           #end
           </tr>
        #end
    </table><br/>

    #if ($datePostArrows)
        #if ($action.nextDatePost || $action.previousDatePost)
            #if ($permissionHelper.canView($action.remoteUser, $action.nextDatePost) )
                <a href="$req.contextPath/display/$action.nextDatePost.space.key/$action.nextDatePost.datePath/"><img src="$staticResourceUrlPrefix/images/icons/forwd_16.gif" height=16 width=16 border=0 align=absmiddle title="Next Post"></a>
                <a href="$req.contextPath/display/$action.nextDatePost.space.key/$action.nextDatePost.datePath/">$action.dateFormatter.format($action.nextDatePost.creationDate)</a><br/>
            #end
            #if ($permissionHelper.canView($action.remoteUser, $action.previousDatePost) )
                <a href="$req.contextPath/display/$action.previousDatePost.space.key/$action.previousDatePost.datePath/"><img src="$staticResourceUrlPrefix/images/icons/back_16.gif" height=16 width=16 border=0 align=absmiddle title="Previous Post"></a>
                <a href="$req.contextPath/display/$action.previousDatePost.space.key/$action.previousDatePost.datePath/">$action.dateFormatter.format($action.previousDatePost.creationDate)</a><br/>
            #end
            <br />
        #end
    #else
        #if ($action.nextPost || $action.previousPost)
             #if ($permissionHelper.canView($action.remoteUser, $action.nextDatePost) )
                 <a href="$req.contextPath$generalUtil.getPageUrl($action.nextPost)"><img src="$staticResourceUrlPrefix/images/icons/forwd_16.gif" height=16 width=16 border=0 align=absmiddle title="Next Post"></a>
                 <a href="$req.contextPath$generalUtil.getPageUrl($action.nextPost)">$action.nextPost.title</a><br/>
             #end

             #if ($permissionHelper.canView($action.remoteUser, $action.previousDatePost) )
                 <a href="$req.contextPath$generalUtil.getPageUrl($action.previousPost)"><img src="$staticResourceUrlPrefix/images/icons/back_16.gif" height=16 width=16 border=0 align=absmiddle title="Previous Post"></a>
                 <a href="$req.contextPath$generalUtil.getPageUrl($action.previousPost)">$action.previousPost.title</a><br/>
             #end
             <br />
         #end
    #end
#end

#* Passes in the action
 * Displays blog posts for the month and arrows to the previous and next month
 * in which blog posts were created
 *#
#macro (blogPostsByMonth $action)

    #set ($cal = $action.calendarForThisMonth)
    #set ($formatter = $action.getDateFormatter())
    #if($action.isBlogPostsByDateAction())
        #set ($monthview = true)
    #elseif ($action.isRecentBlogPosts())
        #set ($recentview = true)
    #end

    #if ($monthview || $recentview)
    <div id="bloglist" class="bloglistmultiple">
    #else
    <div id="bloglist">
    #end
        <div class="bloglistheading">
            <h2 class="sidebar-heading">
                #if($monthview)
                    $action.getText("list.element.blogpost"): $cal.formatMonthYear()
                #else
                    <a href="$req.contextPath/display/$cal.spaceKey/$cal.currentMonth/">$action.getText("list.element.blogpost"): $cal.formatMonthYear()</a>
                #end
            </h2>
        </div>

        <ul class="bloglistitems">
            #set($postcount = 0)
            #foreach ($thePost in $cal.PostsForMonth)
                       <li>
                           <span class="icon-container content-type-blogpost">
                           #if($thePost.id != $blog.id)
                               <a href="$req.contextPath$generalUtil.getPageUrl($thePost)">$thePost.title</a>
                           #else
                               $thePost.title
                           #end
                           </span>
                           #set($postcount = $postcount+1)
                       </li>
            #end
            #if($postcount==0)
                <li>$action.getText('no.posts.found.for.month')</li>
            #end
        </ul>

        #set($previousMonth = $cal.lastPostInPreviousMonth)
        #set($nextMonth = $cal.firstPostInNextMonth)
        #if ($previousMonth)
            <a href="$req.contextPath/display/$cal.spaceKey/$previousMonth.postingYear/$previousMonth.postingMonthNumeric/" rel="nofollow" class="blogmonthnavigation">
                &lt;&lt; $previousMonth.getPostingMonth($formatter) $previousMonth.getPostingYear()
            </a>
        #end
        #if ($nextMonth)
            <a href="$req.contextPath/display/$cal.spaceKey/$nextMonth.postingYear/$nextMonth.postingMonthNumeric/" rel="nofollow" class="blogmonthnavigation">
                $nextMonth.getPostingMonth($formatter) $nextMonth.getPostingYear() &gt;&gt;
            </a>
        #end

    </div>

#end

#* Shows the older/newer arrows at the bottom of the blog page when viewing recent blogposts
 *#
#macro(showOlderNewerBlogNavigation $action)
    <div class="pagination blog-pagination">
        #set($mainPath = "$req.contextPath/pages/viewrecentblogposts.action?key=" + $action.getKey() + '&currentPage=')
        #if(!$action.isOldestPage())
            #set($targetPage = $action.currentPage + 1)
            #set($older = $mainPath + $targetPage)
            <a href="$older" class="blogmonthnavigation">$action.getText("older.name")</a>
        #end
        #if($action.currentPage != 1)
            #set($targetPage = $action.currentPage - 1)
            #set($newer = $mainPath + $targetPage)
            <a href = "$newer" class="blogmonthnavigation">$action.getText("newer.name")</a>
        #end
        #if($action.currentPage > 2)
            #set($newest = $mainPath + 1)
            <a href= "$newest" class="blogmonthnavigation">$action.getText("newest.name")</a>
        #end
    </div>
#end

#* Deprecated, seemingly pointless macro that uses the long-deprecated permission check dispatcher. :)
 *#
#macro (confluenceLink $url $linkTextKey)
    $deprecated.since("4.1")
    #if ($permissionCheckDispatcher.isPermitted($url))
        <a href="$req.contextPath/$url">$action.getText($linkTextKey)</a>
    #end
#end

#macro (confluenceLink2 $url $linkTextKey $prefix $suffix)
    $deprecated.since("4.1")
    #if ($permissionCheckDispatcher.isPermitted($url))
        $prefix <a href="$req.contextPath/$url">$action.getText($linkTextKey)</a> $suffix
    #end
#end

#macro (showPermissionsHeader)
        <tr>
            <th class="permissionHeading" width="25%">&nbsp;</th>
            <th class="permissionHeading">&nbsp;</th>
            <th colspan=4 class="permissionSuperTab">$action.getText('perms.pages')</th>
            <th colspan=2 class="permissionSuperTab">$action.getText('perms.news')</th>
            <th colspan=2 class="permissionSuperTab">$action.getText('perms.comments')</th>
            <th colspan=2 class="permissionSuperTab">$action.getText('perms.attachments')</th>
            <th class="permissionSuperTab">$action.getText('perms.mail')</th>
            <th colspan=2 class="permissionSuperTab">$action.getText('perms.space')</th>
            #if ($edit == 'true')<th class="permissionHeading">&nbsp;</th>#end
        </tr>
        <tr>
            <th class="permissionHeading">&nbsp;</th>
            <th width="40" class="permissionSuperTab">$action.getText('perms.view')</th>
            <th width="40" class="permissionTab">$action.getText('perms.add')</th>
            <th width="40" class="permissionTab">$action.getText('perms.export')</th>
            <th width="40" class="permissionTab">$action.getText('perms.restrict')</th>
            <th width="40" class="permissionTab">$action.getText('perms.remove')</th>
            <th width="40" class="permissionTab">$action.getText('perms.add')</th>
            <th width="40" class="permissionTab">$action.getText('perms.remove')</th>
            <th width="40" class="permissionTab">$action.getText('perms.add')</th>
            <th width="40" class="permissionTab">$action.getText('perms.remove')</th>
            <th width="40" class="permissionTab">$action.getText('perms.add')</th>
            <th width="40" class="permissionTab">$action.getText('perms.remove')</th>
            <th width="40" class="permissionTab">$action.getText('perms.remove')</th>
            <th width="40" class="permissionTab">$action.getText('perms.export')</th>
            <th width="40" class="permissionTab">$action.getText('perms.admin')</th>
            #if ($edit == 'true')<th width="40" class="permissionSuperTab">$action.getText('actions.word')</th>#end
        </tr>
#end

#*
 * shows header for a global permissions table
 *#
#macro (showGlobalPermissionsHeader)
        <tr>
            <th width="230" class="permissionHeading">&nbsp;</th>
            <th width="150" class="permissionHeading">&nbsp;</th>
            <th width="150" class="permissionTab">
                $i18n.getText("permissions.PROFILEATTACHMENTS")
                <a href="#" class="inlineDialog-profileAttachments inline-help">$i18n.getText("inline.dialog.help")</a>
            </th>
            #if ($action.userStatusPluginEnabled)
                <th width="150" class="permissionTab">
                    $i18n.getText("permissions.UPDATEUSERSTATUS")
                    <a href="#" class="inlineDialog-updateStatus inline-help">$i18n.getText("inline.dialog.help")</a>
                </th>
            #end
            <th width="150" class="permissionTab">
                $i18n.getText("permissions.PERSONALSPACE")
                <a href="#" class="inlineDialog-personalSpace inline-help">$i18n.getText("inline.dialog.help")</a>
            </th>
            <th width="150" class="permissionTab">
                $i18n.getText("permissions.CREATESPACE")
                <a href="#" class="inlineDialog-createSpace inline-help">$i18n.getText("inline.dialog.help")</a>
            </th>
            <th width="150" class="permissionTab">
                $i18n.getText("permissions.ADMINISTRATECONFLUENCE")
                <a href="#" class="inlineDialog-adminConfluence inline-help">$i18n.getText("inline.dialog.help")</a>
            </th>
            <th width="150" class="permissionTab">
                $i18n.getText("permissions.SYSTEMADMINISTRATOR")
                <a href="#" class="inlineDialog-adminSystem inline-help">$i18n.getText("inline.dialog.help")</a>
            </th>
        </tr>
#end

#*
 * Macro for getting the URL of a resource from within a themed decorator
 *#

#macro (themeResource $resourcePath)$req.contextPath$sitemeshPage.getProperty("theme.resource.path")$resourcePath#end

#*
 * This macro is quite messy but is neater than simply copying and pasting the HTML three times on two different
 * screens to represent view and edit views of permissions for groups, users, and anonymous entities.
 *
 * Note - this macro renders form elements when in edit mode but you must wrap it in a form element yourself.
 *
 * $who: list containing the following symbols - "g" (group), "u" (user), "a" (anonymous), "e" (everyone).
 * Each symbol is a directive to print out symbolized information in the order in which the symbols are expressed.
 * Note - "e" is actually ["g", "u", "a"]
 *
 * $action: an object carry functionality to support calls for group, user, and anonymous permissions; for example
 * com.atlassian.confluence.security.actions.EditSpacePermissionsAction .
 *
 * $edit: string literal; if set to "true" it will output input boxes for each permission listing, otherwise it will
 * use a tick or cross image for read-only.
 *#
#macro (showPermissions $who $action $edit )

    #if ($who == ["e"])
        #set ($who = ["g", "u", "a"])
    #end

    #foreach( $entity in $who )
       <table id="${entity}PermissionsTable" border="0" cellpadding=2 cellspacing=0 width="100%">

        #if ($entity == "g")
            #set ($groupRows = $action.groupPermissionRows)
            #if (!$groupRows.empty)
                #showPermissionsHeader()

                #foreach ($groupRow in $groupRows)
                    <tr #if($velocityCount % 2 == 0) style="background: #f0f0f0;" #end>
                        <td>
                            $generalUtil.htmlEncode($groupRow.groupName)
                            #if (!$groupRow.entityExists())
                                <br/><span class="errorMessage">$action.getText("error.group.not.found")</span>
                            #elseif ($groupRow.caseInvalid)
                                <br/><span class="errorMessage">$action.getText('error.permission.incorrect.case', [$generalUtil.htmlEncode($groupRow.group.name)])</span>
                            #end
                        </td>
                        #foreach ($permission in ["viewspace", "editspace", "exportpage", "setpagepermissions", "removepage", "editblog", "removeblog", "comment", "removecomment", "createattachment", "removeattachment", "removemail", "exportspace", "setspacepermissions"])
                        <td align="center" class="permissionCell" valign="middle"
                            data-permission="$generalUtil.htmlEncode($permission)"
                            data-permission-group="$generalUtil.htmlEncode($groupRow.groupName)"
                            data-permission-set="$groupRow.isTypeAllowed($permission)">
                            #if ($edit == "true")
                                #if ($groupRow.isTypeAllowed($permission))
                                    <input type="checkbox" name="$groupRow.buildCheckboxParameterName($permission)" checked="checked">
                                    <input type="hidden" name="$groupRow.buildHiddenParameterName($permission)" value="on">
                                #else
                                    <input type="checkbox" name="$groupRow.buildCheckboxParameterName($permission)">
                                #end
                            #else
                                #if ($groupRow.isTypeAllowed($permission))
                                    <img src="$staticResourceUrlPrefix/images/icons/emoticons/check.png" width=16 height=16 align=absmiddle border=0>
                                #else
                                    <img src="$staticResourceUrlPrefix/images/icons/emoticons/error.png" width=16 height=16 align=absmiddle border=0>
                                #end
                            #end
                        </td>
                        #end
                        #if ($edit == 'true')
                            <td class="permissionCell dropdown-perm-actions">
                                <div class="aui-dd-parent">
                                    <a href="" class="aui-dd-trigger perms-dropdown-trigger" title="$action.getText('actions.word')"><span></span></a>
                                    <ul class="aui-dropdown hidden">
                                        <li class="dropdown-item"><a href="#" class="select-all" data-entity="g" data-name="$groupRow.groupName">$action.getText('select-all')</a></li>
                                        <li class="dropdown-item"><a href="#" class="deselect-all" data-entity="g" data-name="$groupRow.groupName">$action.getText('deselect-all')</a></li>
                                    </ul>
                                </div>
                            </td>
                        #end
                    </tr>
                #end
            #else
                <tr><td colspan=5>$action.getText('no.groups.have.access') </td></tr>
            #end
        #end
        #if ($entity == "u")
            #set ($userRows = $action.userPermissionRows)
            #if (!$userRows.empty)
                #showPermissionsHeader()

                #foreach ($userRow in $userRows)

                    <tr data-key="$generalUtil.htmlEncode($userRow.username)" class="key-holder" #if ($velocityCount % 2 == 0)style="background: #f0f0f0;" #end>
                        <td>
                            #if ($userRow.entityExists())
                                $generalUtil.htmlEncode($userRow.user.fullName)
                            #end
                            <span class="grey">($generalUtil.htmlEncode($userRow.username))</span>
                            #if (!$userRow.entityExists())
                                <br/><span class="errorMessage">$action.getText("error.user.not.found")</span>
                            #elseif ($userRow.caseInvalid)
                                <br/><span class="errorMessage">$action.getText('error.permission.incorrect.case', [$generalUtil.htmlEncode($userRow.user.name)])</span>
                            #end
                        </td>
                        #foreach ($permission in ["viewspace", "editspace", "exportpage", "setpagepermissions", "removepage", "editblog", "removeblog", "comment", "removecomment", "createattachment", "removeattachment", "removemail", "exportspace", "setspacepermissions"])
                            <td align="center" class="permissionCell" valign="middle"
                                data-permission="$generalUtil.htmlEncode($permission)"
                                data-permission-user="$generalUtil.htmlEncode($userRow.username)"
                                data-permission-set="$userRow.isTypeAllowed($permission)">
                                ## Don't show checkboxes for owners of personal spaces
                                #if ($edit == "true" && !($action.getSpace().getType().toString() == "personal" && $userRow.getUsername() == $action.getSpace().getCreatorName()) )
                                    #if ($userRow.isTypeAllowed($permission))
                                        <input type="checkbox" name="$userRow.buildCheckboxParameterName($permission)" checked="checked">
                                        <input type="hidden" name="$userRow.buildHiddenParameterName($permission)" value="on">
                                    #else
                                        <input type="checkbox" name="$userRow.buildCheckboxParameterName($permission)">
                                    #end
                                #else
                                    #if ($userRow.isTypeAllowed($permission))
                                        <img src="$staticResourceUrlPrefix/images/icons/emoticons/check.png" width=16 height=16 align=absmiddle border=0>
                                    #else
                                        <img src="$staticResourceUrlPrefix/images/icons/emoticons/error.png" width=16 height=16 align=absmiddle border=0>
                                    #end
                                #end
                            </td>
                        #end
                        #if ($edit == 'true')
                            <td class="permissionCell dropdown-perm-actions">
                                <div class="aui-dd-parent">
                                    <a href="" class="aui-dd-trigger perms-dropdown-trigger" title="$action.getText('actions.word')"><span></span></a>
                                    <ul class="aui-dropdown hidden">
                                        <li class="dropdown-item"><a href="#" class="select-all" data-entity="u" data-name="$userRow.username">$action.getText('select-all')</a></li>
                                        <li class="dropdown-item"><a href="#" class="deselect-all" data-entity="u" data-name="$userRow.username">$action.getText('deselect-all')</a></li>
                                    </ul>
                                </div>
                            </td>
                        #end
                    </tr>
                #end

            #else
                <tr><td colspan=5>$action.getText('no.users.have.rights.to.this.space')</td></tr>
            #end
        #end
        #if ($entity == "a")
            #showPermissionsHeader()
            #set ($anonymousRow = $action.anonymousPermissionRow)
            <tr>
                <td>
                    <strong>$action.getText('anonymous.name')</strong>
                </td>
                #foreach ($permission in ["viewspace", "editspace", "exportpage", "setpagepermissions", "removepage", "editblog", "removeblog", "comment", "removecomment", "createattachment", "removeattachment", "removemail", "exportspace", "setspacepermissions"])
                <td align="center" class="permissionCell" valign="middle"
                    data-permission="$generalUtil.htmlEncode($permission)"
                    data-permission-set="$anonymousRow.isTypeAllowed($permission)">
                    #if ($edit == "true")
                        #if ($anonymousRow.isTypeAllowed($permission))
                            <input type="checkbox" name="$anonymousRow.buildCheckboxParameterName($permission)" checked="checked">
                            <input type="hidden" name="$anonymousRow.buildHiddenParameterName($permission)" value="on">
                        #else
                            <input type="checkbox" name="$anonymousRow.buildCheckboxParameterName($permission)">
                        #end
                    #else
                        #if ($anonymousRow.isTypeAllowed($permission))
                            <img src="$staticResourceUrlPrefix/images/icons/emoticons/check.png" width=16 height=16 align=absmiddle border=0>
                        #else
                            <img src="$staticResourceUrlPrefix/images/icons/emoticons/error.png" width=16 height=16 align=absmiddle border=0>
                        #end
                    #end
                </td>
                #end
                #if ($edit == 'true')
                    <td class="permissionCell dropdown-perm-actions">
                        <div class="aui-dd-parent">
                            <a class="aui-dd-trigger perms-dropdown-trigger" title="$action.getText('actions.word')"><span></span></a>
                            <ul class="aui-dropdown hidden">
                                <li class="dropdown-item"><a href="#" class="select-all" data-entity="a" data-name="anonymous">$action.getText('select-all')</a></li>
                                <li class="dropdown-item"><a href="#" class="deselect-all" data-entity="a" data-name="anonymous">$action.getText('deselect-all')</a></li>
                            </ul>
                        </div>
                    </td>
                #end
            </tr>
        #end
        </table>
    #end
#end

## use this function in tr's to alternate the row colors when displaying a list of items.
#macro (alternateRowColors)
    #if ($velocityCount % 2 == 0)
        class="rowAlternate"
    #end
#end

#macro (spaceTitleLink)
    #if ($sitemeshPage.getProperty("page.spacename"))
        #if ($sitemeshPage.getProperty("page.spacekey"))
            <a href="$req.contextPath/display/$sitemeshPage.getProperty("page.spacekey")">$sitemeshPage.getProperty("page.spacename")</a>
        #else
            $sitemeshPage.getProperty("page.spacename")
        #end
    #else
        &nbsp;
    #end
#end

#macro (pageTitleLink)
    #if ($sitemeshPage.getProperty("page.pageTitle"))
        $sitemeshPage.getProperty("page.pageTitle")
    #else
        $title
    #end
#end


#macro (quickSearch)
    #customQuickSearch("" true true [])
#end

#macro (customQuickSearch $prefix $accessKey $quickNavEnabled $searchOptions)
    #if (!$prefix || $prefix=="") #set($prefix = "") #else #set($prefix = "${prefix}-") #end
    #if (!$searchOptions) #set($searchOptions = []) #end
    #if ($accessKey==true) #set ($accessKey = $action.getTextStrict("quick.search.${prefix}accesskey")) #else #set($accessKey=false) #end

    <form id="${prefix}quick-search" class="quick-search" method="get" action="$req.contextPath/dosearchsite.action">
        <fieldset>
            <label class="assistive" for="${prefix}quick-search-query">$action.getText("quick.search.${prefix}legend")</label>
            <input id="${prefix}quick-search-query" class="quick-search-query" type="search"#if($accessKey) accessKey="$accessKey"#end autocomplete="off" name="queryString" size="25" title="$action.getText("quick.search.${prefix}legend")" />
            <input id="${prefix}quick-search-submit" class="quick-search-submit" type="submit" value="$action.getText("quick.search.${prefix}submit")" />
            <div class="aui-dd-parent quick-nav-drop-down"></div>
        </fieldset>
        <div class="hidden parameters">
            #if ($quickNavEnabled)
                #putMetadata('quick-nav-enabled', $settingsManager.globalSettings.enableQuickNav)
                #if (!$settingsManager) <!-- Quick nav disabled. SettingsManager could not be found --> #end
            #end
            #foreach ($option in $searchOptions)
                #if ($option.name)
                <input type="hidden" name="$option.name" value="$option.value"/>
                #end
            #end
        </div>
    </form>
#end

#*
    Renders an edit link with image, for a blog.
*#
#macro (editBlogPostWithImageLink )

   #set ($page = $helper.page)

   #if ($permissionHelper.canView($action.remoteUser, $page))
       <a href="$req.contextPath/pages/editblogpost.action?pageId=$page.id"><img border="0" src="$staticResourceUrlPrefix/images/icons/edit_16.gif" align="absmiddle"></a>
       <a href="$req.contextPath/pages/editblogpost.action?pageId=$page.id">Edit</a>
   #end
#end


#macro (renderChildren)
    #set ($page = $helper.page)
    #if ($helper.action.getPermittedChildren().size() > 0 && $page.latestVersion)
        <div id="children-section" class="pageSection#if ($helper.childrenShowing) children-showing#else children-hidden#end group">
        #if (!$helper.childrenShowing)
            #set ($extraHeaderClass="summary")
            #set ($linkTarget="$req.contextPath$generalUtil.customGetPageUrl($page)showChildren=true#children")
        #else
            #set ($linkTarget="$req.contextPath$generalUtil.customGetPageUrl($page)showChildren=false#children")
        #end

        <div class="section-header $!extraHeaderClass">
            <h2 id="children-section-title" class="section-title">
                <a href="$linkTarget" class="children-show-hide">
                    #if ($helper.action.getPermittedChildren().size() == 1)
                        $action.getText("number.of.children.one")
                    #else
                        $action.getText("number.of.children", $helper.action.getPermittedChildren().size())
                    #end
                </a>
            </h2>

            <a href="$linkTarget" class="children-show-hide icon"></a>
            <!--
            <span class="noprint grey">
                <a class="children-subtitle" href="$req.contextPath/pages/listpages-dirview.action?key=$page.space.key&amp;openId=$page.id#selectedPageInHierarchy">$action.getText('view.in.hierarchy')</a>
                #if ($page.type == "page" && $permissionHelper.canCreatePage($remoteUser, $space))
                    &nbsp;|&nbsp;
                    <a class="children-subtitle" href="$req.contextPath/pages/createpage.action?spaceKey=$generalUtil.urlEncode($space.key)&amp;fromPageId=$page.id">
                        $helper.getText("action.add.page.child")
                    </a>
                #end
            </span>
            -->
        </div>
        <div id="page-children" class="pageSectionBody#if ($helper.childrenShowing) children-loaded#end">
            #if ($helper.childrenShowing)
            #foreach ($child in $helper.action.getPermittedChildren())
                <span class="child-display">
                    #contentLink2 ($child true false) ## space key after the link is redundant
                </span>
            #end
            #end
        </div>
        </div>
    #end
#end

#macro (renderComments)
    #applyDecorator("root")
        #decoratorParam("sitemeshPage" $sitemeshPage)
        #decoratorParam("page" $page)
        #decoratorParam("context" "sharedcomments")
    #end
#end

## Deprecated sinse 3.0. Use onLoadAttr instead.
#macro (onLoad)
    #if (!$textUtil.stringSet($sitemeshPage.getProperty("page.bodyOnLoad")))
        <body onload="placeFocus()" id="com-atlassian-confluence">
    #else
        <body onload="$sitemeshPage.getProperty('page.bodyOnLoad')" id="com-atlassian-confluence">
    #end
#end

#macro (onLoadAttr)
    #if (!$textUtil.stringSet($sitemeshPage.getProperty("page.bodyOnLoad")))
        onload="placeFocus()"
    #else
        onload="$sitemeshPage.getProperty('page.bodyOnLoad')"
    #end
#end
#macro (versionInfo)

    #if ($helper.historicalVersion)
    <div id="version-info" class="version-info noteMacro padded">

        <img src="$staticResourceUrlPrefix/images/icons/emoticons/warning.png" align="absmiddle" height="16" width="16"
             alt=""> <strong
            class="version-info-description">$action.getText('viewing.old.version',["$req.contextPath$generalUtil.getPageUrl($page.originalVersion)"])</strong>

        <span class="page-history-view">
           <a href="$req.contextPath/pages/diffpagesbyversion.action?pageId=$page.originalVersion.id&amp;originalVersion=$page.version&amp;revisedVersion=$page.originalVersion.version">$action.getText('view.differences')</a>&nbsp;&middot;&nbsp;

            #if ($permissionHelper.canEdit($action.remoteUser, $page))
                <a href="revertpagebacktoversion.action?pageId=$page.originalVersion.id&amp;version=${page.version}">$action.getText('restore.this.version.smalls')</a>&nbsp;&middot;&nbsp;
            #end

            <a href="$req.contextPath/pages/viewpreviousversions.action?pageId=$page.latestVersion.id">$action.getText('view.page.history.smalls')</a>
        </span>

        <div class="navigation-spacing">
            #if ($action.hasPreviousVersion($page))
                <a class="version-navigation"
                   href="$req.contextPath/pages/viewpage.action?pageId=$action.getPageIdOfVersionBefore($page)&amp;navigatingVersions=true">
                    &lt;&lt; $action.getText('view.previous.version')</a>
            #end

            <span class="current-version-margin">
                #if($helper.historicalVersion)
                $action.getText('viewing.current.version', ["$page.version"])
            #end
            </span>

            #if ($page.getOriginalVersionPage().id == $action.getPageIdOfVersionAfter($page))
                <a class="version-navigation" id="current-navigation"
                   href="$req.contextPath$generalUtil.getPageUrl($page.originalVersion)"><strong>$action.getText('view.current.version')
                    &gt;&gt;</strong></a>
            #elseif ($action.hasNextVersion($page))
                <a class="version-navigation"
                   href="$req.contextPath/pages/viewpage.action?pageId=$action.getPageIdOfVersionAfter($page)&amp;navigatingVersions=true">$action.getText('view.next.version')
                    &gt;&gt;</a>
            #end
        </div>
    </div>

    #end


#end


#macro (versionComment)
    #if ($page.isVersionCommentAvailable())
    <div id="version-comment" class="noteMacro">
        <strong>$action.getText('comment.name'):</strong>
        $page.renderedVersionComment<br />
    </div>
    #end
#end

## Label links shown in the context of a space should take the user to a page that contains content for that space only
## to do this, we need to pull the space key either from the $helper or from the $action.
## The getUrlPath() method on label should be able to handle null/empty spacekeys.
#macro (labelLinkUrl $label)
#trim()
    #if($helper.spaceKey)
        $req.contextPath$label.getUrlPath($helper.spaceKey)
    #else
        $req.contextPath$label.getUrlPath($spaceKey)
    #end
#end
#end

#macro (mailOperations $helper)

    <div class="menuheading">
        $action.getText('mail.operations')
    </div>
    <div class="menuitems">
        <div class="operations">
            #if ($helper.action.inThread || $helper.action.nextMail || $helper.action.previousMail)
                <ul style="list-style: none;">
                    #if ($helper.action.inThread)
                        <li>
                            <a href="$req.contextPath/mail/archive/viewthread.action?key=$helper.action.key&id=$helper.action.mail.id" title="$helper.getText("view.mail.thread.title")"><img src="$staticResourceUrlPrefix/images/icons/mail_thread_16.gif" border="0" height=16 width=16 alt="" align="absmiddle"></a>
                            <a href="$req.contextPath/mail/archive/viewthread.action?key=$helper.action.key&id=$helper.action.mail.id" title="$helper.getText("view.mail.thread.title")"><span class="label">$helper.getText("view.mail.thread.desc")</span></a>
                        </li>
                    #end

                    #if( $helper.action.nextMail && $permissionHelper.canView($action.remoteUser, $helper.action.nextMail))
                        <li>
                            <a href="${req.contextPath}$helper.action.nextMail.urlPath"><img src="$staticResourceUrlPrefix/images/icons/forwd_16.gif" height=16 width=16 border=0 align=absmiddle title="$generalUtil.escapeXml($helper.action.nextMail.title)"></a><span class="label">
                            <a href="${req.contextPath}$helper.action.nextMail.urlPath" title="$generalUtil.escapeXml($helper.action.nextMail.title)">$helper.getText("next.mail")</a></span>
                        </li>
                    #end

                    #if( $helper.action.previousMail && $permissionHelper.canView($action.remoteUser, $helper.action.previousMail))
                        <li>
                            <a href="${req.contextPath}$helper.action.previousMail.urlPath"><img src="$staticResourceUrlPrefix/images/icons/back_16.gif" height=16 width=16 border=0 align=absmiddle title="$generalUtil.escapeXml($helper.action.previousMail.title)"></a><span class="label">
                            <a href="${req.contextPath}$helper.action.previousMail.urlPath" title="$generalUtil.escapeXml($helper.action.previousMail.title)">$helper.getText("previous.mail")</a></span>
                        </li>
                    #end
                </ul>
            #end

            <ul style="list-style: none;">
                #if( $permissionHelper.canRemove($action.remoteUser, $mail) )
                    <li>
                        <a href="$req.contextPath/mail/archive/removemail.action?key=$mail.space.key&id=$mail.id"><img src="$staticResourceUrlPrefix/images/icons/trash_16.gif" height=16 width=16 border=0 align=absmiddle title="$i18n.getText('remove.mail.name')}"></a><span class="label">
                        <a href="$req.contextPath/mail/archive/removemail.action?key=$mail.space.key&id=$mail.id">$helper.getText("remove.mail.name")</a></span>
                    </li>
                #end

                #if( $permissionHelper.canView($action.remoteUser, $mail) )
                    <li>
                    #if ($mail)
                        <a href="$req.contextPath/mail/archive/viewmailarchive.action?key=$mail.space.key"><img src="$staticResourceUrlPrefix/images/icons/contenttypes/mail_16.png" width="16" height="16" border="0" align="absmiddle" title="$i18n.getText('mail.archive.name')"></a><span class="label">
                        <a href="$req.contextPath/mail/archive/viewmailarchive.action?key=$mail.space.key">$helper.getText("mail.archive.name")</a></span>
                    #else
                        <a href="$req.contextPath/mail/archive/viewmailarchive.action?key=$helper.action.key"><img src="$staticResourceUrlPrefix/images/icons/contenttypes/mail_16.png" width="16" height="16" border="0" align="absmiddle" title="$i18n.getText('mail.archive.name')"></a><span class="label">
                        <a href="$req.contextPath/mail/archive/viewmailarchive.action?key=$helper.action.key">$helper.getText("mail.archive.name")</a></span>
                    #end
                    </li>
                #end
            </ul>

        </div>
    </div>
#end


#* ----------------------------------------------- LOGO MACROS ----------------------------------------------- *#

## only returns the image url of the appropriate logo
## this method is deprecated. Use LogoBlock instead, it delegates to newer and more efficient macros.
#macro (logo $spaceKeyOrUsername)
#trim()
	## Firstly, if it's a username, look for user profile picture
	#if ($textUtil.stringSet($spaceKeyOrUsername) && $spaceKeyOrUsername.startsWith("~"))
        ##This may still lead to bugs (VELOCITY-186) but for now I am leaving this unchanged. TODO examine this
        #set ($userProfilePicture = $userAccessor.getUserProfilePicture($spaceKeyOrUsername.substring(1)))
		#if ($userProfilePicture)
			$req.contextPath$userProfilePicture.downloadPath
		#else
			$staticResourceUrlPrefix/images/logo/confluence_48_white.png
		#end

	## Otherwise, it's not a username, so let's check if the space has a set logo
	#elseif ($textUtil.stringSet($spaceKeyOrUsername) && $spaceManager.getSpace($spaceKeyOrUsername) && $attachmentManager.getAttachment($spaceManager.getSpace($spaceKeyOrUsername).description, $spaceKeyOrUsername))
		$generalUtil.htmlEncode("${req.contextPath}$attachmentManager.getAttachment($spaceManager.getSpace($spaceKeyOrUsername).description, $spaceKeyOrUsername).downloadPath")

	## No space logo, let's look for a global logo
	#elseif ($settingsManager.globalDescription && $attachmentManager.getAttachment($settingsManager.globalDescription,"global.logo"))
		#set($attachment=$attachmentManager.getAttachment($settingsManager.globalDescription,"global.logo"))
		$generalUtil.htmlEncode("${req.contextPath}$attachment.downloadPath")

	## No global logo, let's use the default Confluence logo
    #else
		$staticResourceUrlPrefix/images/logo/confluence_48_white.png
    #end

#end
#end

## checks if space preferences to determine if the logo has been disabled, and then displays it.
## include href link just in case we want to customize this part based on some preference in the future (without breaking people's stuff again)
#macro (logoBlock $spaceKeyOrUsername)
#trim()
    #if ($textUtil.stringSet($spaceKeyOrUsername))
		#if ($spaceKeyOrUsername.startsWith("~"))
			#userLogoBlock($spaceKeyOrUsername.substring(1))
		#else
			#spaceLogoBlock($spaceKeyOrUsername)
		#end
	#else
        #globalLogoBlock()
    #end
#end
#end



## private - use #logoBlock.
#macro (spaceLogoBlock $spaceKey)
#trim()
     #if ($settingsManager.getSpaceSettings($spaceKey).isDisableLogo()) ## render nothing
     #else
       #set ($spaceLogo=$spaceManager.getLogoForSpace($spaceKey))
       #set($cssClass="logo")
       #if ($spaceLogo.isCustomLogo())
           #set($cssClass="$cssClass space custom")
       #else
           #set($cssClass="$cssClass global")
           #if ($spaceLogo.isGlobalLogo())
               #set($cssClass="$cssClass custom")
           #end
       #end

       <a href="$req.contextPath/display/$spaceKey"><img class="$cssClass" src="${req.contextPath}$spaceLogo.getDownloadPath()" alt=""></a>

    #end
#end
#end

## private - use #logoBlock
#macro (userLogoBlock $username)
#trim()
    #set ($userProfilePicture=$userAccessor.getUserProfilePicture($username))
    #set($canView = $permissionHelper.canView($action.remoteUser, $action.getUser($username)))

     ## if the user profile stil has the default picture, AND the usericon getting displayed is the current user, THEN generate a link to set the profile picture

    ## if the user profile still has the default picture, AND the usericon getting displayed is the current user, THEN generate a link to set the profile picture
    #if ($userProfilePicture.isDefault() && "$action.remoteUser.name" == $username)
        <a #if($canView) class="userLogoLink" data-username="$generalUtil.urlEncode($username)"#end href="$req.contextPath/users/editmyprofilepicture.action" title="$action.getText("add.a.profile.picture")">
            <img class="userLogo logo" src="$staticResourceUrlPrefix/images/icons/profilepics/add_profile_pic.png" alt="$action.getText("accessibility.user.icon"): $action.getText("add.a.profile.picture")">
        </a>
    #else
      ## otherwise, the default case is to display the logo, depending on permissions
      #if ($userProfilePicture.isAnonymous())
           <img class="userLogo logo anonymous" src="$staticResourceUrlPrefix/images/icons/profilepics/anonymous.png"
            alt="$action.getText("accessibility.user.icon"): $action.getText("user.icon.anonymous.title")" title="$action.getText("user.icon.anonymous.title")">
      #elseif (!$canView)
           ##anonymous users with user permission but without view profile permission should not see user logos or be linked to profiles
           <img class="userLogo logo anonymous" src="$staticResourceUrlPrefix/images/icons/profilepics/anonymous.png"
           alt="$action.getText("accessibility.user.icon"): $generalUtil.htmlEncode($username)" title="$generalUtil.htmlEncode($username)">
      #else
           <a #if($canView) class="userLogoLink" data-username="$generalUtil.urlEncode($username)"#end href="$req.contextPath/display/~$generalUtil.urlEncode($username)">
               <img class="userLogo logo" src="$req.contextPath$generalUtil.htmlEncode($userProfilePicture.downloadPath)"
               alt="$action.getText("accessibility.user.icon"): $generalUtil.htmlEncode($username)" title="$generalUtil.htmlEncode($username)">
           </a>
      #end
    #end
#end
#end

## private - use #logoBlock.
#macro (globalLogoBlock)
  #trim()
      #if ($settingsManager.getGlobalSettings().isDisableLogo())
      #else
          #set ($globalLogo=$spaceManager.getLogoForGlobalcontext())

          #set ($completeDownloadPath=$generalUtil.htmlEncode("$req.contextPath$globalLogo.getDownloadPath()"))


          #if ($globalLogo.isCustomLogo())
             <a href="$req.contextPath/homepage.action"><img class="global logo custom"  src="$completeDownloadPath" alt="$action.globalSettings.siteTitle"></a>
          #else
             <a href="$req.contextPath/homepage.action"><img class="global logo"  src="$completeDownloadPath" alt="$action.globalSettings.siteTitle"></a>
          #end
      #end
   #end
#end


## shows the user's profile picture if they have one, otherwise _shows nothing_ (not a Confluence logo like logoBlock)
#macro (logoForUserIfExists $username)
    #userLogoBlockOtherwise("~$username" "")
#end

## Render a user logo if not the default one, otherwise evaluate the provided expression
#macro (userLogoBlockOtherwise $username $otherwiseHtml)
    #if (!$generalUtil.isDefaultUserProfilePicture($username.substring(1)) || "~$action.remoteUser.name" == $username)
        #userLogoBlock($username.substring(1))
    #else
        $otherwiseHtml
    #end
#end

#macro (logoForUserOrSpacer $username)
    #userLogoBlockOtherwise("~$username" "#profilePictureSpacer()")
#end

#macro (profilePictureSpacer)
    <img class="userLogo logo anonymous" src="$staticResourceUrlPrefix/images/icons/profilepics/anonymous.png" alt="" title="$action.getText("user.icon.anonymous.title")">
#end

#* DEPRECATED *#
#macro (addProfilePictureHint)
    <a class="userLogoLink" href="$req.contextPath/users/editmyprofilepicture.action" title="$action.getText("add.a.profile.picture")">
        <img class="userLogo logo" src="$staticResourceUrlPrefix/images/icons/profilepics/add_profile_pic.png" alt="$action.getText("add.a.profile.picture")">
    </a>
#end

#* DEPRECATED *#
#macro (userLogo $username)
    <a class="userLogoLink" href="$req.contextPath/display/$username"><img class="userLogo logo" src="#logo($username)" alt="" title="$username"></a>
#end

#* ----------------------------------------------- SIMPLE LINK MACROS -----------------------------------------------
 Store macros which render a one line link here.
*#

#macro (tinyLink )
    <a href="$helper.domainName/x/$helper.tinyUrl">$helper.domainName/x/$helper.tinyUrl</a>
#end


## src - path to js file _without_ context path
#macro (includeJavascript $src)
    #if ($src && !$src.startsWith("/"))
        #set ($src = "/${src}")
    #end

    #if ($webResourceManager)
        <script type="text/javascript" src="$staticResourceUrlPrefix$src"></script>
    #else
        <script type="text/javascript" src="$req.contextPath$src"></script>
    #end
#end

## Use this macro to request a Javascript or CSS plugin resource be added to the HTML header.
## This macro doesn't generate any actual markup.
#macro (requireResource $resourceModuleKey)
    $!webResourceManager.requireResource($resourceModuleKey)
#end

## Use this macro to request all Javascript or CSS plugin resources belonging to the given context
## added to the HTML header. This macro doesn't generate any actual markup.
#macro (requireResourcesForContext $context)
    ## These explicit calls are because we can't define dependencies
    ## for our contexts.
    ## See: http://jira.atlassian.com/browse/CONF-13739
    #requireResource("confluence.web.resources:ajs")
    $!webResourceManager.requireResourcesForContext($context)
#end

#macro (webPanelForLocation $location $context)
    #if (!$context)
        #set ($actualContext = {})
    #else
        #set ($actualContext = $context)
    #end

    #foreach ($webPanel in $webInterfaceManager.getDisplayableWebPanels($location, $actualContext))
        $!webPanel.getHtml($actualContext)
    #end
#end

## use this macro to include javascript resources in plugins
## this macro appends a special prefix to the normal script URL (effectively enabling caching on the serving of this javascript)
#macro (includePluginJavascript $pluginCompleteKey $scriptName)
    #if ($webResourceManager)
        <script type="text/javascript" src="$webResourceHelper.getStaticPluginResource($pluginCompleteKey, $scriptName)"></script>
    #else
        <script type="text/javascript" src="$req.contextPath/download/resources/$pluginCompleteKey/$scriptName"></script>
    #end
#end


#macro (node $p $idsToExpandAsList $openId)
    #if ($action.hasPermittedChildren($p))
        <a href="#if($idsToExpandAsList.contains($p.id))$action.generateCollapseNodeLinkForNonJSUsers($p)#else $!action.generateExpandNodeLinkForNonJSUsers($p)#end" onClick="toggleChildren('$p.id'); return false;">
        #if($idsToExpandAsList.contains($p.id))
            <img border="0" onClick="togglePlusMinus(this)" src="$staticResourceUrlPrefix/images/icons/tree_minus.gif"></a>
        #else
            <img border="0" onClick="togglePlusMinus(this)" src="$staticResourceUrlPrefix/images/icons/tree_plus.gif"></a>
        #end
    #else
        <img border="0" src="$staticResourceUrlPrefix/images/icons/tree_square.gif">
    #end
    #if ($p.id == $openId)
        <span class="openPageHighlight">#contentLinkWithAnchor($p 'selectedPageInHierarchy')</span>
    #else
        #contentLink2 ($p true false)
    #end
    <div id="children$p.id" style="border: 1px solid white">
        #if ($idsToExpandAsList.contains($p.id))
            <ul style="list-style-type: none">
            #foreach ($child in $action.getPermittedChildren($p))
                <li>#node($child $idsToExpandAsList $openId)</li>
            #end
            </ul>
        #end
    </div>
#end

#macro (permitSearchEngines)
    <content tag="allowindex">true</content>
#end

#macro (searchResultContentLink $searchResult)
    #contentIcon($searchResult)

	#if ($searchResult.type == "attachment")
		<a href="$req.contextPath$searchResult.extraFields.attachmentDownloadPath">$generalUtil.htmlEncode($searchResult.displayTitle)</a>
	#else
		<a href="$req.contextPath$searchResult.urlPath">$generalUtil.htmlEncode($searchResult.displayTitle)</a>
	#end

	#if ($searchResult.type == "page" || $searchResult.type == "blogpost")
		<span class="smalltext">(<a href="$req.contextPath/display/$generalUtil.urlEncode($searchResult.spaceKey)">$generalUtil.htmlEncode($searchResult.spaceName)</a>)</span>
	#elseif ($searchResult.type == "attachment")
		<span class="smalltext">
			(<a href="$req.contextPath/display/$generalUtil.urlEncode($searchResult.spaceKey)">$generalUtil.htmlEncode($searchResult.spaceName)</a>
			&gt; <a href="$req.contextPath$searchResult.extraFields.containingContentUrlPath">$generalUtil.htmlEncode($searchResult.extraFields.containingContentDisplayTitle)</a>)
		</span>
	#elseif ($searchResult.type == "comment")
		<span class="smalltext">
			(<a href="$req.contextPath/display/$generalUtil.urlEncode($searchResult.spaceKey)">$generalUtil.htmlEncode($searchResult.spaceName)</a>
			&gt; <a href="$req.contextPath$searchResult.extraFields.containingPageUrlPath">$generalUtil.htmlEncode($searchResult.extraFields.containingPageDisplayTitle)</a>)
		</span>
    #end
#end

#macro (searchResult $searchResult $showExcerpts $queryString)

	## ensure we check for null here to avoid trying to assign null (CONF-12141)
	#if ($searchResult.content)
		#set ($contentBody = $searchResult.content)
	#else
		#set ($contentBody = '')
	#end

	#searchResultContentLink($searchResult)
    #if ('true' == $showExcerpts && $stringUtils.isNotBlank($contentBody) && $stringUtils.isNotBlank($queryString))
		#if ($searchResult.type != "attachment")
            #set ($summary = $generalUtil.makeSummary($contentBody, $queryString))
        #elseif ($searchResult.type == "attachment" && $contentBody)
            #set ($summary = $generalUtil.makeSummary($contentBody, $queryString))
        #elseif ($searchResult.type == "attachment" && $searchResult.comment)
            #set ($summary = $generalUtil.makeSummary($searchResult.comment, $queryString))
        #end

        #if ($summary)
            <br/>
            ## this is all one one line so that fragments are concatenated properly without spaces
            #foreach ($fragment in $summary.fragments)#if ($fragment.isHighlight() == true)<span class="search-highlight"><strong>$generalUtil.htmlEncode($fragment.toString())</strong></span>#else$generalUtil.htmlEncode($fragment.toString())#end#end
        #end

        ## clear the summary after displaying it to avoid Velocity scope problems
        #set ($summary = '')
    #end

    <br />
    <span class="smalltext">
        #if ($searchResult.type == 'attachment')
            #if ($searchResult.extraFields.attachmentTypeDescription)
                $searchResult.extraFields.attachmentTypeDescription -
            #end
            $searchResult.extraFields.attachmentReadableFileSize -
        #end

        $action.dateFormatter.format($searchResult.lastModificationDate)

        #if ($searchResult.type == 'attachment')
            - <a href="$req.contextPath$searchResult.extraFields.attachmentDownloadPath">$action.getText('download.name')</a>
            - <a href="$req.contextPath$searchResult.urlPath">$action.getText('all.attachments')</a>
        #elseif ($searchResult.type == 'comment')
			- <a href="$req.contextPath${searchResult.extraFields.containingPageUrlPath}#comments">$action.getText('all.comments')</a>
        #elseif ($searchResult.type == 'blogpost')
            - <a href="$req.contextPath/pages/viewrecentblogposts.action?key=$generalUtil.urlEncode($searchResult.spaceKey)">$action.getText('all.news')</a>
        #elseif ($searchResult.type == 'mail')
            - <a href="$req.contextPath/spaces/viewmailarchive.action?key=$generalUtil.urlEncode($searchResult.spaceKey)">$action.getText('all.mail')</a>
        #end
    </span>

	#if ($searchResult.hasLabels())

        #set ($labels = $searchResult.getLabels($remoteUser))
		#set ($max = 5)

		#if ($labels.size() > 0)
			<br />
        	<span class="smalltext">
        	$action.getText('labels.name'):
			#set($remaining = $labels.size() - $max)
			#foreach($label in $labels)#if($velocityCount <= $max)#if($velocityCount > 1), #end <a href="$req.contextPath/label/$generalUtil.urlEncode($label)" rel="nofollow">$label</a>#end#end
			#if($remaining > 0)
			... $action.getText('search.x.more.labels', [$remaining]).
			#end
			</span>
		#end

    #end

#end

#macro (commaDelimitedList $list)
    #foreach($item in $list)#if($velocityCount != 1), #end$!item#end
#end

#macro (doc $link $body)
    <a href="$docBean.getLink($link)" target="_blank">$body</a>
#end

## Renders a hint box with some helpful text inside.
## A documentation link is assumed to exist for the hint.
## The $hintKey will be used in conjunction with a prefix
## to look up the full i18n strings for the hint:
## - The hint text itself will be prefixed with "hint."
## - The documentation link url will be prefixed with "help."
## - The documentation link text will be prefixed with "more.about."
#macro (hint $hintKey)
    <div class="hints">
        <span class="hints-text">
            $i18n.getText("hint.$hintKey")
            #doc("help.$hintKey" $i18n.getText("more.about.$hintKey"))
         </span>
    </div>
#end

#macro (addClassName $existingClass $newClass)
    #set ($existingClass = "$existingClass $newClass")
#end

#macro (captchaImage)
    <img src="$req.contextPath/jcaptcha" class="captcha-image" alt="$generalUtil.escapeXml($i18n.getText("captcha.image.alt"))" />
#end

## deprecated - pre 4.0 way of displaying comments and submit buttons. Use editor.vm now.
#macro (commentSubmission)
    #if ($action.editComment)
        #set ($submitLabel = "update.name")
    #else
        #set ($submitLabel = "post.name")
    #end

	#parse ("/pages/includes/captcha-form-elements.vm")

	<br />
    <div class="submit-buttons">
	#bodytag ("Submit" "name='confirm'" "value='$submitLabel'" "theme='notable'")
		 #param ("accessKey" "s")
		#param ("tabindex" "201")
	#end

	#bodytag ("Submit" "name='cancel'" "value='cancel.name'" "theme='notable'" )
		#param ("tabindex" "202")
	#end

	#if ($remoteUser && !$action.userWatchingPage && !$action.userWatchingSpace)
		#bodytag ("Checkbox" "name='watchPageAfterComment'" "theme='notable'" "label='comment.notification.enable'" "value='$action.userWatchingOwnContent'")
			#param ("tabindex" "203")
		#end
	#end
    </div>
#end

#macro (displayContentPermission $perm)
    #if ($perm.isUserPermission())
        <img src="$staticResourceUrlPrefix/images/icons/user_16.gif">&nbsp;$perm.userName
    #else
        <img src="$staticResourceUrlPrefix/images/icons/group_16.gif">&nbsp;$perm.groupName
    #end
#end

#macro (favicon)
    <link rel="shortcut icon" href="$req.contextPath/favicon.ico">
    <link rel="icon" type="image/png" href="$staticResourceUrlPrefix/images/logo/confluence_16_white.png">
#end


#macro(dashboard_renderGlobalActions $menuId $webSectionKeys)
    #set($webMenu = $webMenuManager.getMenu($menuId, $webSectionKeys, $action.webInterfaceContext))
    ## don't display if there are no sections - only expect one section for this location
    #if(!$webMenu.isEmpty())
        #foreach ($section in $webMenu.sections)
            <div class="dashboard-item dashboard-action-button">
            #foreach ($item in $section.items)
                #set ($itemRenderedUrl = '')
                #set ($itemRenderedUrl = $item.link.getDisplayableUrl($req, $action.webInterfaceContext))
                #set ($itemLabel = $item.label.getDisplayableLabel($req, $action.webInterfaceContext))
                #set ($itemClass = $item.styleClass)
                #set ($itemIcon = $item.icon)
                #set ($itemDescription = $item.description)
                #set ($itemIconUrl = $itemIcon.url.getDisplayableUrl($req, $action.webInterfaceContext))
                #set ($itemTooltip = $item.tooltip.getDisplayableLabel($req, $action.webInterfaceContext))
                #set ($linkId = $item.link.id)

                <span>
                <a id="$linkId" class="$!itemClass dashboard-no-underline dashboard-action" title= "$itemTooltip" href="$itemRenderedUrl">
                    <span class="icon"></span> $itemLabel
                </a>
                </span>
            #end
            </div>
        #end
    #end
#end

## Method to avoid encoding by Anti-XSS mode.  This method is dangerous and should usually
## be avoided.
#macro(unencoded $assumedHtml)
#trim()
    $assumedHtml
#end    
#end

#macro(form_xsrfToken)
    <input type="hidden" name="${xsrfTokenGenerator.xsrfTokenName}" value="${xsrfTokenGenerator.generateToken($req)}">
#end

#macro(url_xsrfToken)
#trim()
   ${xsrfTokenGenerator.xsrfTokenName}=${xsrfTokenGenerator.generateToken($req)}
#end
#end

#macro (showCacheStatistics $cacheStatistics, $expiredCountHeaderProperty)

    #if(!$expiredCountHeaderProperty)
        #set ($expiredCountHeaderProperty = "cache.expired")
    #end

    <table class="grid" width="100%">
        <tr>
            <th class="smalltext">$action.getText("name.word")</th>
            <th class="smalltext">$action.getText("cache.percentused")</th>
            <th class="smalltext">$action.getText("cache.effectiveness")</th>
            #if ($action.showDistributions)
                <th class="smalltext">$action.getText("cache.objects") / $action.getText("size.name")</th>
                <th class="smalltext">$action.getText("cache.hit") / $action.getText("cache.miss") / $action.getText("${expiredCountHeaderProperty}")</th>
                <th class="smalltext">$action.getText("adjust.size.name")</th>
            #end
            <th class="smalltext">$action.getText("flush.name")</th>
        </tr>
        #foreach($cacheStatistic in $cacheStatistics)
            #if ($action.showDistributions || $cacheStatistic.hasContents())
            <tr>
                <td title="$cacheStatistic.name">$cacheStatistic.niceName</td>
                <td align="center">${cacheStatistic.usagePercent}%</td>
                <td align="center" #if ($cacheStatistic.hitPercent != 0 && $cacheStatistic.hitPercent < 25) bgcolor="#FFDDDD"#end>${cacheStatistic.hitPercent}%</td>

                #if ($action.showDistributions)
                    <td align="center">$cacheStatistic.size / $cacheStatistic.maxSize</td>
                    <td align="center">$cacheStatistic.hitCount / $cacheStatistic.missCount / $cacheStatistic.expiredCount</td>
                    <td align="center">
                        <form method="POST" id="$cacheStatistic.name" action="adjustcachesize.action">
                            #form_xsrfToken()
                            <input name="cacheSize" size="5" type="text" value="$cacheStatistic.maxSize"/>
                            <input type="hidden" name="cacheName" value="$cacheStatistic.name" />
                            <input type="hidden" name="showDistributions" value="true" />
                            <input type="submit" value="Adjust Size"/>
                        </form>
                    </td>
                #end

                <td align="center">
                    <a id="flush-$cacheStatistic.name" href="$req.contextPath/admin/flushcache.action?cache=$cacheStatistic.name&redirectUrl=cachestatistics.action%3FshowDistributions%3D$action.showDistributions&#url_xsrfToken()">$action.getText('flush.name')</a>
                </td>
            </tr>
            #end
        #end
        <tr>
            <td #if ($action.showDistributions) colspan="7" #else colspan="4" #end align="right">
                <a id="flush-all" href="$req.contextPath/admin/flushcache.action?#url_xsrfToken()&redirectUrl=cachestatistics.action%3FshowDistributions%3D$action.showDistributions">$action.getText('flush.all')</a>
            </td>
        </tr>
    </table>
#end

#macro (sortLink $sortByLink $destination $label)
    #if ($sortBy == $sortByLink)
        <span class="sortedby">$label</span>
    #else
        <a href="$destination">$label</a>
    #end
#end

## Used with AJS.I18n.getText(key) in JavaScript
#macro (jsI18n $key)
    <input type="hidden" title="i18n.$key" value="$generalUtil.htmlEncode($i18n.getText($key))">
#end

## Use this macro to request that a key-value pair be made available to AJS.Meta in JavaScript.
## This macro doesn't generate any markup in-place; it renders the pair when #renderMetadata is called in the header.
## Note that the 'Html' in $valHtml is used to avoid HTML-encoding the string.
#macro (putMetadata $key $valHtml)
    #set ($val = "$!valHtml")
    #if (!$webResourceManager.putMetadata($key, $val))
        <!-- putMetadata failed to add value for key "$key" so rendering metadata inline - see server debug log for details -->
        #renderMetadatum($key, $val)
    #end
#end

## This macro should be called once in the <head> element to render all key-value pairs needed by AJS.Meta.
## The metadata content will be escaped for HTML attributes only - JS/HTML/URL-encoding is up to calling JS.
#macro (renderMetadata)
    #set ($metadata = $webResourceManager.getMetadata())
    #foreach($key in $metadata.keySet())
        #renderMetadatum($key, $metadata.get($key))
    #end
#end

## Renders a single metadata key/value pair
#macro (renderMetadatum $key $val)
<meta name="ajs-$key" content="$generalUtil.htmlEncode($val)">
#end

#macro (attr $name $value)
   #if($value) $name="$value" #end
#end

## Assistive macros
#macro (assistiveLegend $label)
    #bodytag ("Component" "label='$label'" "template='assistive.vm'" "theme='aui'")
       #param ("type" "legend")
    #end    
#end

#macro (assistiveSkipLink $label $value)
    #bodytag ("Component" "label='$label'" "value='$value'" "template='assistive.vm'" "theme='aui'")
        #param ("type" "skip-link")
    #end
#end

#macro (assistiveLabel $label $value)
    #bodytag ("Component" "label='$label'" "value='$value'" "template='assistive.vm'" "theme='aui'")
        #param ("type" "label")
    #end
#end
